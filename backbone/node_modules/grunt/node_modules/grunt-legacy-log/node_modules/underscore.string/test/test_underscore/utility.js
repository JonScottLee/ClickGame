$(document).ready(function() {

  var templateSettings;

  module("Utility", {

    setup: function() {
      templateSettings = _.clone(_.templateSettings);
    },

    teardown: function() {
      _.templateSettings = templateSettings;
    }

  });

  test("#750 - Return _ instance.", 2, function() {
    var instance = _([]);
    ok(_(instance) === instance);
    ok(new _(instance) === instance);
  });

  test("identity", function() {
    var moe = {name : 'moe'};
    equal(_.identity(moe), moe, 'moe is the same as his identity');
  });

  test("uniqueId", function() {
    var ids = [], i = 0;
    while(i++ < 100) ids.push(_.uniqueId());
    equal(_.uniq(ids).length, ids.length, 'can generate a globally-unique stream of ids');
  });

  test("times", function() {
    var vals = [];
    _.times(3, function (i) { vals.push(i); });
    ok(_.isEqual(vals, [0,1,2]), "is 0 indexed");
    //
    vals = [];
    _(3).times(function (i) { vals.push(i); });
    ok(_.isEqual(vals, [0,1,2]), "works as a wrapper");
  });

  test("mixin", function() {
    _.mixin({
      myReverse: function(string) {
        return string.split('').reverse().join('');
      }
    });
    equal(_.myReverse('panacea'), 'aecanap', 'mixed in a function to _');
    equal(_('champ').myReverse(), 'pmahc', 'mixed in a function to the OOP wrapper');
  });

  test("_.escape", function() {
    equal(_.escape("Curly & Moe"), "Curly &amp; Moe");
    equal(_.escape("Curly &amp; Moe"), "Curly &amp;amp; Moe");
    equal(_.escape(null), '');
  });

  test("_.unescape", function() {
    var string = "Curly & Moe";
    equal(_.unescape("Curly &amp; Moe"), string);
    equal(_.unescape("Curly &amp;amp; Moe"), "Curly &amp; Moe");
    equal(_.unescape(null), '');
    equal(_.unescape(_.escape(string)), string);
  });

  test("template", function() {
    var basicTemplate = _.template("<%= thing %> is gettin' on my noives!");
    var result = basicTemplate({thing : 'This'});
    equal(result, "This is gettin' on my noives!", 'can do basic attribute interpolation');

    var sansSemicolonTemplate = _.template("A <% this %> B");
    equal(sansSemicolonTemplate(), "A  B");

    var backslashTemplate = _.template("<%= thing %> is \\ridanculous");
    equal(backslashTemplate({thing: 'This'}), "This is \\ridanculous");

    var escapeTemplate = _.template('<%= a ? "checked=\\"checked\\"" : "" %>');
    equal(escapeTemplate({a: true}), 'checked="checked"', 'can handle slash escapes in interpolations.');

    var fancyTemplate = _.template("<ul><% \
      for (key in people) { \
    %><li><%= people[key] %></li><% } %></ul>");
    result = fancyTemplate({people : {moe : "Moe", larry : "Larry", curly : "Curly"}});
    equal(result, "<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>", 'can run arbitrary javascript in templates');

    var escapedCharsInJavascriptTemplate = _.template("<ul><% _.each(numbers.split('\\n'), function(item) { %><li><%= item %></li><% }) %></ul>");
    result = escapedCharsInJavascriptTemplate({numbers: "one\ntwo\nthree\nfour"});
    equal(result, "<ul><li>one</li><li>two</li><li>three</li><li>four</li></ul>", 'Can use escaped characters (e.g. \\n) in Javascript');

    var namespaceCollisionTemplate = _.template("<%= pageCount %> <%= thumbnails[pageCount] %> <% _.each(thumbnails, function(p) { %><div class=\"thumbnail\" rel=\"<%= p %>\"></div><% }); %>");
    result = namespaceCollisionTemplate({
      pageCount: 3,
      thumbnails: {
        1: "p1-thumbnail.gif",
        2: "p2-thumbnail.gif",
        3: "p3-thumbnail.gif"
      }
    });
    equal(result, "3 p3-thumbnail.gif <div class=\"thumbnail\" rel=\"p1-thumbnail.gif\"></div><div class=\"thumbnail\" rel=\"p2-thumbnail.gif\"></div><div class=\"thumbnail\" rel=\"p3-thumbnail.gif\"></div>");

    var noInterpolateTemplate = _.template("<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");
    result = noInterpolateTemplate();
    equal(result, "<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");

    var quoteTemplate = _.template("It's its, not it's");
    equal(quoteTemplate({}), "It's its, not it's");

    var quoteInStatementAndBody = _.template("<%\
      if(foo == 'bar'){ \
    %>Statement quotes and 'quotes'.<% } %>");
    equal(quoteInStatementAndBody({foo: "bar"}), "Statement quotes and 'quotes'.");

    var withNewlinesAndTabs = _.template('This\n\t\tis: <%= x %>.\n\tok.\nend.');
    equal(withNewlinesAndTabs({x: 'that'}), 'This\n\t\tis: that.\n\tok.\nend.');

    var template = _.template("<i><%- value %></i>");
    var result = template({value: "<script>"});
    equal(result, '<i>&lt;script&gt;</i>');

    var stooge = {
      name: "Moe",
      template: _.template("I'm <%= this.name %>")
    };
    equal(stooge.template(), "I'm Moe");

    if (!$.browser.msie) {
      var fromHTML = _.template($('#template').html());
      equal(fromHTML({data : 12345}).replace(/\s/g, ''), '<li>24690</li>');
    }

    _.templateSettings = {
      evaluate    : /\{\{([\s\S]+?)\}\}/g,
      interpolate : /\{\{=([\s\S]+?)\}\}/g
    };

    var custom = _.template("<ul>{{ for (key in people) { }}<li>{{= people[key] }}</li>{{ } }}</ul>");
    result = custom({people : {moe : "Moe", larry : "Larry", curly : "Curly"}});
    equal(result, "<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>", 'can run arbitrary javascript in templates');

    var customQuote = _.template("It's its, not it's");
    equal(customQuote({}), "It's its, not it's");

    var quoteInStatementAndBody = _.template("{{ if(foo == 'bar'){ }}Statement quotes and 'quotes'.{{ } }}");
    equal(quoteInStatementAndBody({foo: "bar"}), "Statement quotes and 'quotes'.");

    _.templateSettings = {
      evaluate    : /<\?([\s\S]+?)\?>/g,
      interpolate : /<\?=([\s\S]+?)\?>/g
    };

    var customWithSpecialChars = _.template("<ul><? for (key in people) { ?><li><?= people[key] ?></li><? } ?></ul>");
    result = customWithSpecialChars({people : {moe : "Moe", larry : "Larry", curly : "Curly"}});
    equal(result, "<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>", 'can run arbitrary javascript in templates');

    var customWithSpecialCharsQuote = _.template("It's its, not it's");
    equal(customWithSpecialCharsQuote({}), "It's its, not it's");

    var quoteInStatementAndBody = _.template("<? if(foo == 'bar'){ ?>Statement quotes and 'quotes'.<? } ?>");
    equal(quoteInStatementAndBody({foo: "bar"}), "Statement quotes and 'quotes'.");

    _.templateSettings = {
      interpolate : /\{\{(.+?)\}\}/g
    };

    var mustache = _.template("Hello {{planet}}!");
    equal(mustache({planet : "World"}), "Hello World!", "can mimic mustache.js");

    var templateWithNull = _.template("a null undefined {{planet}}");
    equal(templateWithNull({planet : "world"}), "a null undefined world", "can handle missing escape and evaluate settings");
  });

  test('_.template provides the generated function source, when a SyntaxError occurs', function() {
    try {
      _.template('<b><%= if %></b>');
    } catch (e) {
      ok(e.source.indexOf('( if )') > 0);
    }
  });

  test('_.template handles \\u2028 & \\u2029', function() {
    var tmpl = _.template('<p>\u2028<%= "\\u2028\\u2029" %>\u2029</p>');
    strictEqual(tmpl(), '<p>\u2028\u2028\u2029\u2029</p>');
  });

  test('result calls functions and returns primitives', function() {
    var obj = {w: '', x: 'x', y: function(){ return this.x; }};
    strictEqual(_.result(obj, 'w'), '');
    strictEqual(_.result(obj, 'x'), 'x');
    strictEqual(_.result(obj, 'y'), 'x');
    strictEqual(_.result(obj, 'z'), undefined);
    strictEqual(_.result(null, 'x'), null);
  });

  test('_.templateSettings.variable', function() {
    var s = '<%=data.x%>';
    var data = {x: 'x'};
    strictEqual(_.template(s, data, {variable: 'data'}), 'x');
    _.templateSettings.variable = 'data';
    strictEqual(_.template(s)(data), 'x');
  });

  test('#547 - _.templateSettings is unchanged by custom settings.', function() {
    ok(!_.templateSettings.variable);
    _.template('', {}, {variable: 'x'});
    ok(!_.templateSettings.variable);
  });

  test('#556 - undefined template variables.', function() {
    var template = _.template('<%=x%>');
    strictEqual(template({x: null}), '');
    strictEqual(template({x: undefined}), '');

    var templateEscaped = _.template('<%-x%>');
    strictEqual(templateEscaped({x: null}), '');
    strictEqual(templateEscaped({x: undefined}), '');

    var templateWithProperty = _.template('<%=x.foo%>');
    strictEqual(templateWithProperty({x: {} }), '');
    strictEqual(templateWithProperty({x: {} }), '');

    var templateWithPropertyEscaped = _.template('<%-x.foo%>');
    strictEqual(templateWithPropertyEscaped({x: {} }), '');
    strictEqual(templateWithPropertyEscaped({x: {} }), '');
  });

  test('interpolate evaluates code only once.', 2, function() {
    var count = 0;
    var template = _.template('<%= f() %>');
    template({f: function(){ ok(!(count++)); }});

    var countEscaped = 0;
    var templateEscaped = _.template('<%- f() %>');
    templateEscaped({f: function(){ ok(!(countEscaped++)); }});
  });

  test('#746 - _.template settings are not modified.', 1, function() {
    var settings = {};
    _.template('', null, settings);
    deepEqual(settings, {});
  });

  test('#779 - delimeters are applied to unescaped text.', 1, function() {
    var template = _.template('<<\nx\n>>', null, {evaluate: /<<(.*?)>>/g});
    strictEqual(template(), '<<\nx\n>>');
  });

});
$Ñ,üﬁù¥>=II  s9ªñ!¸X“õOÅ∞ƒÛ_˙KUÕ√ÌÒâÊ#ıjıÒı3k˘eC3áÑúpŒ‹ªj#©ﬁãÏâåLo1æá-<¥i\√n-∏fb?%ûú‰ŸUnÄu]-_\Ò(öÑ1Váx‡4WªA?Òù¢,v‹ËÈ™’Ï‹eÇbï‚≥Ñ©∞µlÆùù÷1¢Ó€A~,?ÕaäOŸı≤\°ìOõPv•èŸÑÙB7f"J◊n¢‡ƒÙ(Ã˘/¡\%@Ω‚î)·˜Æ2áD5‹5~+*Ø¡zH√œæéPåI ˛;(Pá+©‹ΩH§âíç®4s‘}ñ≈¸æäπ∏Ëø
‰ä6WÈb¥Å§≤Ù6'¢ã˙XlQËn3B¿5ûä¿F&\aã$ÖêNP‡ù±.ë&m¯«MItJ€)ﬂF´&»∆µÎ;˙ŒÕeÜ6Ho	(˚Tª±üÉÁ)è PØiΩ"VñÒa} …Üƒ2(ÊÔ≥¸È4aÁÇ?≥¶0•~‡ŸMN<Æ¢"É?R¸ kíΩÿ	ØL<»^Écj∆˙ù2+ﬂ“ﬂãªÔÓqu»≥¸ö©á ›ØÃ{éÀZ≠ü§Îπ’Ï† <ﬂmö°›Yáu$Ì√gîæQ∆íä‰ûlï’
	hﬁÕΩ|ƒ0¢í‡uGê∂Mƒ #X ‰√ˆ$kÙÊÇæ$?ø≥Ìÿø…@dµïˆπ6ûZ%°8V	ÌÖ÷C»@Íÿ¥Ô‹∆ØrwVtZ?¶È÷ÃœêlÅﬁ„Oµzº†EXÌˆwÃî\WÉ±ÜzNñcÓmkèâ'tÆáªn
-@t¥¯ +Z8Ì`úbÃÕgçp(»õ‚8eÉø.˙·‘LûS“≤8œ“ﬂ%ñ%∑nìüù˝‘=π6 ‹Îá@•;~|PvÊÇ®®Ìû jËOMmC=2vk≈#˙¸X ˚>%\éMY—à:üÈy<úü˙ˆ∑¥$ŒÂ&Ä9HB< É<
„E›c>V™+∏Ùé¿◊€oö(˜dÈ%"∆7ûoQ≤±,•ääJ”+c˝˙ÔE‹qù¯kπìÄeÄVG[ï¯ì£x|SÍ+xCuÉô©∂‹kÇﬂ—ê˙ÓKôÅW|:@∫µ(É∞%¨ﬂchá]tâΩ≠%ÑB·sI»HñYl âs‘o8Ù0»∂ï·Ô>Üıá‡O)ÒÚwdµä…∫'æº¡ìŒçæ}◊ ◊⁄:Ã=[∂ÁíﬁÙπ»º¡:⁄†E\^3yˆU™u≥ö	èM\&°±¢zLE¥IRb‘ÊŸ@hÀjÒX€∞Ì˚õ	§ÔYÏ9ıdﬁﬂ^å§jEêïÏ˝Ò7°"$»·˜@f©f€?GÒˇ’ê†∫'ûfl§€ÚO o√Zqˇb7?ntˇ9à/å(›µ ~g6ºŸ°˛ãI¨¿OHÜüw®8è]»(>v8o∫T≤ó{©ˇ∂∑¢UfAÃç∑;≈8)˚]oÛ74˜ó≤e˙9~A£ÿ/–ãï`–˜…Œ˝˙RÖ≈Õ,^lôªœúOèqJ˚¨U”¢	ë¨%+C'Vü◊MVR˝˛â£Ëk-àY®“¯+T`Jﬁ\‹Y9’°ro·våõ≤¿ÒêBy«pmõ◊⁄ mœúÙ_ãöAi ZTI—Såf∏±ßr#»^vF;·‚hVœ⁄‹°È0ï ˘G’Ií©gCÓx©ÎÙˇ›rØ™T1Óqs›ÿdbﬂöÒéZv£˝3ß‹f≈cU-Ì®‚Åı^úû∂π•±Cû—ä¥5≤H|Òt⁄®Ωû#‹…øïcSË[eˆ<é˘3Ew2Ìb-¯À<9‹ ˜¸˘%ˇ”ïùÌ»Âd¸~™˚t>ÿ¸…ƒ±™∂Ás@/-lL©Ñ∂÷àEdÓ™UÖY·ÑÇfÄnDrÓ;"¶&[¡ñ›˜¨˜ü^€∂Ò∂ˇ†™Ò˛b9i•Ãf hÕΩX^Z Ò h)ª∂ÓÁw≈J¯hıÉ‡HÃqØ§”˛‹°ƒåÔ´€Nµ3p‚ø˛˜#.Eó‡¡BäáÔy	7Å2À·ÉŸäBë‹tÌLÿèÅP)2H∂B”≠\ÔF7Yú!~m-G·YX˙P ¥4≤ 4˙A@ôª2‰¶~e]ˆWë∞¨›ië í9Í )ÙZ«⁄RŸ=€HËdÆÓèÂVèÛö,Tâ-8TX_¯Ü◊ãvoûª¿˛MËÍ„∆‡DlÖ√)hgû€<pi"jÑÄ&üpÔf¯õ@¿∆6B'n®Mìq·%bÿf˘Î˜ÕÉ†7ÌÂ@ó©
H"jŸ∑Ô8ç®3…öÀCÿ˘¨åìe›˙p$‰Y;œ„5§◊vú¡≈ot§Z2ñÃÒèÙØ≠¸;Ì≈ß”“¢ıÔnT)k¨%¡ÙíZ¥¡h¡f®ÿó'hö√ïrmﬁˆ¥ss©]j¨g\O!£¥	≥Ãî—ıÖ(jä‰"Ì≤yùßªO˙åÎñçB$¬æÊîÑ.cﬂYrzãL7{a@¨*íRAùN‚uxàöûÊu∞€'MYbn6{ü´'5∏πb u˘/YÅ¯—‡hL//Äµãø≥1ÆÚÀÆ÷f◊Ó≠mñ—bxﬁ#®©«®KL:ói“Íñ›∫πT£Q•YÖ˘$S>#ÅÀ1iˇiz‚Œòˇó"ÍŒ¨<=™¿˝kfÌù&søÃg∑ŸIuUÙÉ‹ü4ö˙‘%ΩÕçt7ŒTVxZ¥˛$ƒ+µÀ\D◊2Ñê—€©ˆ>Œöc±Ï”î∫W©9ÁUk≈Ú&¶”õÍVc•∆ºôÀÄÓ=íŸ‡” W!át3ÿºhàƒO<Ö1≤Zõ7≤1úò€Ò∂‡zﬁ|ç“YvìS.H¿ÿÚó¥é2Lw*◊¨˙LFX&¡¯Yõ∆S¥Ø¯r.∑ΩÓûÏÙ‚é&0•bRß≈r’Äã≥ÊBvÔ◊∆§Ã
©2âñ∞#^ÛB&ªñTö*+˝0ü2Ÿ¢ÁÕ›1¶ºPó©r¥V‰1Rr/uE`§ñW⁄I‡q‰d3pì—◊ÉÏÁ^úP∫ÉÃ•·œ¯∑ïÃL|wÖ:œ7∏äêY ¯=ÿ‚&m—±Ç¥‡∫Á‰ˆêá-N´â±Vâêœ‹ˆ{åÎ°ûêDøºÈ-ñV∞7yøÛ+‡®¿£bπpdπE©Z≈JFæ0%9oz`£pﬂ¯zdöˆàtaBª;ﬂÈZ˘wÌÅW∑ä%)ÖÚÕ Aêíæ⁄[;,!äœíG^¢í#E”,ﬂ–WÇ cO*ü÷ô&Ô∏H„◊[’.ŸFjëÆÚ¿ê˛í∞Ó›~Ó33z–ò∫=ãûêÆl∞∏*Ôig€”ƒ@û»£f	ﬂÒ\K<Ô¡º¿…€	∆qrT©!1~Ë‚;¢⁄ﬁ¨47¨2∞J∂>÷rAÿäoPÜÏ≈Ø†XQ2Æ“EéΩ,IL3‘”KIb÷ıˆƒÉm˘üË–E^£—Q⁄Hª~0`ˇm◊J4óÓzªUD·j{0«ê=Bj«Üb4àótt‘ hæ