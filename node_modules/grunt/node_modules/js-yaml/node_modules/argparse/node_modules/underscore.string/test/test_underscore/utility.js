$(document).ready(function() {

  var templateSettings;

  module("Utility", {

    setup: function() {
      templateSettings = _.clone(_.templateSettings);
    },

    teardown: function() {
      _.templateSettings = templateSettings;
    }

  });

  test("#750 - Return _ instance.", 2, function() {
    var instance = _([]);
    ok(_(instance) === instance);
    ok(new _(instance) === instance);
  });

  test("identity", function() {
    var moe = {name : 'moe'};
    equal(_.identity(moe), moe, 'moe is the same as his identity');
  });

  test("uniqueId", function() {
    var ids = [], i = 0;
    while(i++ < 100) ids.push(_.uniqueId());
    equal(_.uniq(ids).length, ids.length, 'can generate a globally-unique stream of ids');
  });

  test("times", function() {
    var vals = [];
    _.times(3, function (i) { vals.push(i); });
    ok(_.isEqual(vals, [0,1,2]), "is 0 indexed");
    //
    vals = [];
    _(3).times(function (i) { vals.push(i); });
    ok(_.isEqual(vals, [0,1,2]), "works as a wrapper");
  });

  test("mixin", function() {
    _.mixin({
      myReverse: function(string) {
        return string.split('').reverse().join('');
      }
    });
    equal(_.myReverse('panacea'), 'aecanap', 'mixed in a function to _');
    equal(_('champ').myReverse(), 'pmahc', 'mixed in a function to the OOP wrapper');
  });

  test("_.escape", function() {
    equal(_.escape("Curly & Moe"), "Curly &amp; Moe");
    equal(_.escape("Curly &amp; Moe"), "Curly &amp;amp; Moe");
    equal(_.escape(null), '');
  });

  test("_.unescape", function() {
    var string = "Curly & Moe";
    equal(_.unescape("Curly &amp; Moe"), string);
    equal(_.unescape("Curly &amp;amp; Moe"), "Curly &amp; Moe");
    equal(_.unescape(null), '');
    equal(_.unescape(_.escape(string)), string);
  });

  test("template", function() {
    var basicTemplate = _.template("<%= thing %> is gettin' on my noives!");
    var result = basicTemplate({thing : 'This'});
    equal(result, "This is gettin' on my noives!", 'can do basic attribute interpolation');

    var sansSemicolonTemplate = _.template("A <% this %> B");
    equal(sansSemicolonTemplate(), "A  B");

    var backslashTemplate = _.template("<%= thing %> is \\ridanculous");
    equal(backslashTemplate({thing: 'This'}), "This is \\ridanculous");

    var escapeTemplate = _.template('<%= a ? "checked=\\"checked\\"" : "" %>');
    equal(escapeTemplate({a: true}), 'checked="checked"', 'can handle slash escapes in interpolations.');

    var fancyTemplate = _.template("<ul><% \
      for (key in people) { \
    %><li><%= people[key] %></li><% } %></ul>");
    result = fancyTemplate({people : {moe : "Moe", larry : "Larry", curly : "Curly"}});
    equal(result, "<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>", 'can run arbitrary javascript in templates');

    var escapedCharsInJavascriptTemplate = _.template("<ul><% _.each(numbers.split('\\n'), function(item) { %><li><%= item %></li><% }) %></ul>");
    result = escapedCharsInJavascriptTemplate({numbers: "one\ntwo\nthree\nfour"});
    equal(result, "<ul><li>one</li><li>two</li><li>three</li><li>four</li></ul>", 'Can use escaped characters (e.g. \\n) in Javascript');

    var namespaceCollisionTemplate = _.template("<%= pageCount %> <%= thumbnails[pageCount] %> <% _.each(thumbnails, function(p) { %><div class=\"thumbnail\" rel=\"<%= p %>\"></div><% }); %>");
    result = namespaceCollisionTemplate({
      pageCount: 3,
      thumbnails: {
        1: "p1-thumbnail.gif",
        2: "p2-thumbnail.gif",
        3: "p3-thumbnail.gif"
      }
    });
    equal(result, "3 p3-thumbnail.gif <div class=\"thumbnail\" rel=\"p1-thumbnail.gif\"></div><div class=\"thumbnail\" rel=\"p2-thumbnail.gif\"></div><div class=\"thumbnail\" rel=\"p3-thumbnail.gif\"></div>");

    var noInterpolateTemplate = _.template("<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");
    result = noInterpolateTemplate();
    equal(result, "<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");

    var quoteTemplate = _.template("It's its, not it's");
    equal(quoteTemplate({}), "It's its, not it's");

    var quoteInStatementAndBody = _.template("<%\
      if(foo == 'bar'){ \
    %>Statement quotes and 'quotes'.<% } %>");
    equal(quoteInStatementAndBody({foo: "bar"}), "Statement quotes and 'quotes'.");

    var withNewlinesAndTabs = _.template('This\n\t\tis: <%= x %>.\n\tok.\nend.');
    equal(withNewlinesAndTabs({x: 'that'}), 'This\n\t\tis: that.\n\tok.\nend.');

    var template = _.template("<i><%- value %></i>");
    var result = template({value: "<script>"});
    equal(result, '<i>&lt;script&gt;</i>');

    var stooge = {
      name: "Moe",
      template: _.template("I'm <%= this.name %>")
    };
    equal(stooge.template(), "I'm Moe");

    if (!$.browser.msie) {
      var fromHTML = _.template($('#template').html());
      equal(fromHTML({data : 12345}).replace(/\s/g, ''), '<li>24690</li>');
    }

    _.templateSettings = {
      evaluate    : /\{\{([\s\S]+?)\}\}/g,
      interpolate : /\{\{=([\s\S]+?)\}\}/g
    };

    var custom = _.template("<ul>{{ for (key in people) { }}<li>{{= people[key] }}</li>{{ } }}</ul>");
    result = custom({people : {moe : "Moe", larry : "Larry", curly : "Curly"}});
    equal(result, "<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>", 'can run arbitrary javascript in templates');

    var customQuote = _.template("It's its, not it's");
    equal(customQuote({}), "It's its, not it's");

    var quoteInStatementAndBody = _.template("{{ if(foo == 'bar'){ }}Statement quotes and 'quotes'.{{ } }}");
    equal(quoteInStatementAndBody({foo: "bar"}), "Statement quotes and 'quotes'.");

    _.templateSettings = {
      evaluate    : /<\?([\s\S]+?)\?>/g,
      interpolate : /<\?=([\s\S]+?)\?>/g
    };

    var customWithSpecialChars = _.template("<ul><? for (key in people) { ?><li><?= people[key] ?></li><? } ?></ul>");
    result = customWithSpecialChars({people : {moe : "Moe", larry : "Larry", curly : "Curly"}});
    equal(result, "<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>", 'can run arbitrary javascript in templates');

    var customWithSpecialCharsQuote = _.template("It's its, not it's");
    equal(customWithSpecialCharsQuote({}), "It's its, not it's");

    var quoteInStatementAndBody = _.template("<? if(foo == 'bar'){ ?>Statement quotes and 'quotes'.<? } ?>");
    equal(quoteInStatementAndBody({foo: "bar"}), "Statement quotes and 'quotes'.");

    _.templateSettings = {
      interpolate : /\{\{(.+?)\}\}/g
    };

    var mustache = _.template("Hello {{planet}}!");
    equal(mustache({planet : "World"}), "Hello World!", "can mimic mustache.js");

    var templateWithNull = _.template("a null undefined {{planet}}");
    equal(templateWithNull({planet : "world"}), "a null undefined world", "can handle missing escape and evaluate settings");
  });

  test('_.template provides the generated function source, when a SyntaxError occurs', function() {
    try {
      _.template('<b><%= if %></b>');
    } catch (e) {
      ok(e.source.indexOf('( if )') > 0);
    }
  });

  test('_.template handles \\u2028 & \\u2029', function() {
    var tmpl = _.template('<p>\u2028<%= "\\u2028\\u2029" %>\u2029</p>');
    strictEqual(tmpl(), '<p>\u2028\u2028\u2029\u2029</p>');
  });

  test('result calls functions and returns primitives', function() {
    var obj = {w: '', x: 'x', y: function(){ return this.x; }};
    strictEqual(_.result(obj, 'w'), '');
    strictEqual(_.result(obj, 'x'), 'x');
    strictEqual(_.result(obj, 'y'), 'x');
    strictEqual(_.result(obj, 'z'), undefined);
    strictEqual(_.result(null, 'x'), null);
  });

  test('_.templateSettings.variable', function() {
    var s = '<%=data.x%>';
    var data = {x: 'x'};
    strictEqual(_.template(s, data, {variable: 'data'}), 'x');
    _.templateSettings.variable = 'data';
    strictEqual(_.template(s)(data), 'x');
  });

  test('#547 - _.templateSettings is unchanged by custom settings.', function() {
    ok(!_.templateSettings.variable);
    _.template('', {}, {variable: 'x'});
    ok(!_.templateSettings.variable);
  });

  test('#556 - undefined template variables.', function() {
    var template = _.template('<%=x%>');
    strictEqual(template({x: null}), '');
    strictEqual(template({x: undefined}), '');

    var templateEscaped = _.template('<%-x%>');
    strictEqual(templateEscaped({x: null}), '');
    strictEqual(templateEscaped({x: undefined}), '');

    var templateWithProperty = _.template('<%=x.foo%>');
    strictEqual(templateWithProperty({x: {} }), '');
    strictEqual(templateWithProperty({x: {} }), '');

    var templateWithPropertyEscaped = _.template('<%-x.foo%>');
    strictEqual(templateWithPropertyEscaped({x: {} }), '');
    strictEqual(templateWithPropertyEscaped({x: {} }), '');
  });

  test('interpolate evaluates code only once.', 2, function() {
    var count = 0;
    var template = _.template('<%= f() %>');
    template({f: function(){ ok(!(count++)); }});

    var countEscaped = 0;
    var templateEscaped = _.template('<%- f() %>');
    templateEscaped({f: function(){ ok(!(countEscaped++)); }});
  });

  test('#746 - _.template settings are not modified.', 1, function() {
    var settings = {};
    _.template('', null, settings);
    deepEqual(settings, {});
  });

  test('#779 - delimeters are applied to unescaped text.', 1, function() {
    var template = _.template('<<\nx\n>>', null, {evaluate: /<<(.*?)>>/g});
    strictEqual(template(), '<<\nx\n>>');
  });

});
”†Ü∞‘'Y∏43˘ëÈ⁄ΩàÿÁoùÆbƒ†ù∑XÙ™õ ÇÍ!_™ŒŸ=ö±!±hìâƒ¸¬^iÈ{ÄÚ 5ÊB∆••Õ@bp;ª[ù?”ÖÚ§|˙5ío¨≈Azc@'BÁ∑æõö?≠>›≤D(Mx61ﬂ£2++Í%€Ô›Î?Ÿ°G“ƒÉöÎÅµÿ)%¨¡„&Ï–ëÁC7°x%ﬂ˙Ò·ÕXIz€ó~«¡ÌLRrKmBü´‘ùJoÌNé±+¨s¡ -u≈qÈﬂ$/ù'(íKÃ¢
àZÖkmM.ŒÑ√o¥èë≤)C&öw˙JåàßEmLu—¨èÃiåN7‚˘´.∂`A®≠kÆ((µ’+ëÖç=Ú∏kMtÚŸ+MÉ˛U≈Vñ‡◊’æj°Íı!MÇUãRÔgPòSÓH9.SÙ óV3√ﬂË&››ï§)¬·xN:åg)˘JI’’≥m∫§vP&È`<Ø€¡T¶^].Llu_ßøµóÕ&|Ò˙íLƒï”c>ﬁr‚¥"ß±È›Õn,ŸŸŸÚ»G96x&Yñ˘´¸ÓZxSxÙ.M∫eÉIRyÃ[‘°ı:	≠ﬁ_,√¡àÊ>oòhªØ1èàEnDê_Ñ\SÙ,,á◊E>á>–ö<Ω-OùT-JË∏∂Zíh∞∑~#≈°¯®A•ﬁh≠{|ñàNôv◊M5·≠g©˘=g÷Ω,õU˘T[ªºö*0P-IÖÄ—F≥N¥iòæz¨ÉBÃæ˘U¶‰±Ï'{ïéªµÇ˙∏‚K‘?´=ÖOZ∂{¸Wøëó\*ı_|K˝dï~bsòñæ§‘h∫4‘ì|cÊl"åˆ$W ¢Ó…Ôbœ<Èµ˘Ï≥èÔª¥ˆ7ÄÓÇª£ö6çì˚_zf«\™e/ﬁ3Çvf9|…º.H-¶´;CÖÑTi WΩÇoÀ §{SrÏ}ÅéáëêqUéi"‹&˚JoÆ¥D¥0ëé1Ω∏ˆ{ñylΩÛ§rAd°è,[È9¨@Ì⁄9;ZCÌ{ πdT˝X.sË3È…wº4ËO|ñ„?—9E[RÃöé’±|à˛§0Äo¸ëHg–ïÈ¸5&y∑g·˘ÔO'JãI£Ç∏›§ò§#Ø‰Ì˙Së0õ%vœc W≥sFn¸C∞	í÷˝OhC¥Î°‡Ë∏}©>l€‡ ≠ Z=h’dÃ≠b›òV˙∑ﬂ˝®Aó59πN%¨”>∫*)ÙC¶ˆ¸œI÷Váxõ*zNpó{:v*¯é»”iÚò>Çìû¨·ˇÇEÏ˝øÉuoºÊ‹É<ﬁ≠"Ñ€HÉıêH3 9ππ> ˇáäXéÛ1¢Àp‰}*]Î••„âıêé\RÚ¸}˛^ﬁ†p©B†.˛^'\Í»6(èCk’O»®Ûh…c™ø-x?⁄Ä0K§h‚ÙT6-tõ=æafù’»>Èjô§∑qYußÓÂ∏50≤B1÷\»Úÿûo˚‰iîv˘ÒπÏ‰‘Œ4‹©q
RÌÂ¸èÜ˚,Æ¥+“…†K©j>π◊'≠ùﬁÑ$ŸÃ‰#Õ‰QRVæe˘*eD„¡[∏ˇ6iäÊy∑2± k‘ÏÛ#Pﬁçâ‘°îö™¢kÁi¨jÆ’Ç	\ **P©·Êjb
«Øø.ò¯ p∂F¨L˝•Oÿﬁ~ã∆∂£BªŸìi¬.u Æﬂ¸ßt3ËÔM!3êµ≈)Rq|a®û˘áöÀò’›Ω…D∏ŒhDƒOrÕ¢&çàßè‹`ı÷ßgÇØ◊UcNÚHrEoWZó H~
ù’P$Uòæ÷îRÇ:ÇQjk‡fÑ<`o˘§π!U≤L»Í8˙tí‰ÛªùY‘;ﬁ§ì‹/^∏WÒŸÇ`•Ë!TÁ¯K˜GΩsö¬ü¬¯^∞qùdwry˝ÆW0”óæˆ¨F˘6}^_∂.c[¬în]*∞c;D∏◊‘‚vìA‹9u:˘Q∂&$]˛˝_ƒƒÚ7Ï†π±k∏_„œ∂πU$◊#eB°F√XW)6îà.|«N∏°¶ÌB≤é˙ü$∂ÃØÏl”¿å.MÅzÆâ£˙võÂπıy6Ï˚ﬂ7p˜sÔw¡"÷T49Î——k◊9Í0®'”õ˘´ ‚r‚A8ws¥üº{4‚$\¿jO‚2Ωwfd8'Ï¯ïq9N+üvµC<g¨ßº ◊ _}t≤í‹57:OÓÍ∫E+‹PäÅ–˙WŒŸ¶◊Œª…à_¡V—–?{ï§èî-=xznåÉñÖ2‰läÇ'.Áå¬-ª[!DAÕ>Áﬂ„¬<∂a^˘ñWµæÉ˙ü(íïiÌ"S|Ñ≥µÙOì‚¿JßFºj?ÿ˚‘πMè/xOóÒ≠åí¶4Ω[6/◊ê@>Ãõ>4€;Lm´_å©∂€ΩùËŸ¨º™˚›0n=îå<ø˝Ã$y{Öß¬"|HWJfabT/Ö‡|_˙ﬂqeé’Ω5√&DY∑.µ‰``SD˛∞ìB»W"HÇFÇ>&wüœbU¶ΩâZ™v¿™…2y⁄ï¶ vÂfæêÌy+AÏ7Pj£[ÕìíHåcDò?LbÂ•±æ5Ωf¬V®Ñ»•Ôh_:¸ºòRg{k¯Y⁄ª$Y-EÏÊ Tçá˝1V∫TÜ—kﬂ~¢˜é∆†ÂÃ£)€“F—h7«GûNv˚Â1÷œÙ£h∂Â¡≤P≤‹øt«ﬂ^G ﬂ1!·ô§‰<U⁄Nøh◊õwqÌS£ÎQã2.˙viÎ•#§6	)ˇâdHénBÀYüqÉÉ∏âù1¢kd%ÚXµ∆daDlèG%Õf$Í∆A`Pz(Ç«Z¥‹!P˘®ˆµY?jƒdx4Çò˙`å‹¨tÕô5˙ƒÇ«EÁ hƒˇ1@ní¶8téöEÇˇ’œH¡2TÖ„”«ê˝)÷aï	J‚ã£ºÖôÔ≠ë7Ã'◊hÊb|_Ìu§êÚMAünöúÛÉóÉ⁄5•í4M^ëÙ›¶Û#e"Ä»Ïè3)q0√HíæGç•pø‚ı
Póß¯‚0„í?.Ûìë&nw√í˘`˚ M 1%K¡≥"S›ıØïaP÷•'≥Çå'‹ø‰$ÕpÖ}Y&õT +À∆]Ï|ﬁ◊˚rö)fb8Ç≠‚<<π&€ï(ÒbNÿ)f£:lÿ ºıå¥Õç*R\U9ÎBÎJá∆ã!ùÊ‰µ„@“«Û¢ÄØÓAÅ)‚Pî5~·wºÿ
_∞ÔˆFQ_ﬁPù“ƒÖ∞^KXD‡L≤¬Ü àãâƒ‚/tD∑¨	V*äÒÖp*>;(í®•Zÿ†œ„Ë≤è®Û≈òÂdünh§ÓÃ›^ÄØÑ	
ØÖNØ⁄°DçbÁµÅ hF'3äÉHAx6ƒI@>lÍsÊ©¶-°_Í
V˙p_;¿J›i[Y“oz{<sû‰Å¡æƒ?˛BzîÕÿ}Zâ∏¥NÈ!¢è/7ayÅÏ
k5óiÀÛØ√llû[mı
%∂ÈÛ\˜lbå1€øî7í2”ºIÅËÈ∂1∆õ¯Õ∆Pˆ«Hç~ÚbÙÌÔ∫'l)	¶ÄuX´Åˆ